#!/bin/bash

# Treat unset variables as an error when performing parameter expansion
# and exit immediately if a simple command exits with a non-zero status.
# Returns the exit value of the last (rightmost) command to exit with
# non-zero in a pipeline of commands.
set -e -o pipefail

# This script starts Wiremock Standalone

# Some notes on bash scripting:
# Variables flagged as local readonly will not terminate the script if they are set by command substitution.

umask u=rwx,g=r,o=
export APACHE_CONFDIR=$HOME/etc/apache2
APACHE_ENVVARS="$APACHE_CONFDIR/envvars"

if test -r $APACHE_ENVVARS; then
    . $APACHE_ENVVARS
fi

JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
CATALINA_HOME=/usr/share/tomcat9
CATALINA_TMPDIR=$TMPDIR
#JAVA_OPTS="-Xmx256m -Djava.awt.headless=true"
JAVA_OPTS="-Djava.awt.headless=true -Dorg.slf4j.simpleLogger.showDateTime=true"
CATALINA_OPTS=""

# Ensure that any user defined CLASSPATH variables are not used on startup,
# but allow them to be specified in setenv.sh, in rare case when it is needed.
CLASSPATH=

if [ -r "$CATALINA_BASE/bin/setenv.sh" ]; then
    . "$CATALINA_BASE/bin/setenv.sh"
elif [ -r "$CATALINA_HOME/bin/setenv.sh" ]; then
    . "$CATALINA_HOME/bin/setenv.sh"
fi

# Add on extra jar files to CLASSPATH
if [ ! -z "$CLASSPATH" ] ; then
    CLASSPATH="$CLASSPATH":
fi
CLASSPATH="$CLASSPATH""$CATALINA_HOME"/bin/bootstrap.jar
CLASSPATH=$CLASSPATH:$CATALINA_HOME/bin/tomcat-juli.jar

CATALINA_OUT="$CATALINA_BASE/logs/catalina.out"
LOGGING_CONFIG="-Djava.util.logging.config.file=$CATALINA_BASE/conf/logging.properties"
LOGGING_MANAGER="-Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager"

# Add the JAVA 9 specific start-up parameters required by Tomcat
JDK_JAVA_OPTIONS="$JDK_JAVA_OPTIONS --add-opens=java.base/java.lang=ALL-UNNAMED"
JDK_JAVA_OPTIONS="$JDK_JAVA_OPTIONS --add-opens=java.base/java.io=ALL-UNNAMED"
JDK_JAVA_OPTIONS="$JDK_JAVA_OPTIONS --add-opens=java.rmi/sun.rmi.transport=ALL-UNNAMED"
export JDK_JAVA_OPTIONS

for DI in apache2 tomcat9 ; do
    if [ ! -d $HOME/var/log/$DI ] ; then
        mkdir $HOME/var/log/$DI
    fi
done

cd $HOME
#cd $CATALINA_HOME

/usr/bin/java -XshowSettings:vm "$LOGGING_CONFIG" "$LOGGING_MANAGER" \
              -classpath "$CLASSPATH" \
              -Dcatalina.base="$CATALINA_BASE" \
              -Dcatalina.home="$CATALINA_HOME" \
              -Djava.io.tmpdir="$CATALINA_TMPDIR" \
               $JAVA_OPTS \
              org.apache.catalina.startup.Bootstrap start &

#      org.apache.catalina.startup.Bootstrap start >> "$CATALINA_OUT" 2>&1 

# TODO - uncomment below
#readonly WAIT_FOR_CERT_KEY_FILE_SECONDS=180
#readonly CERT_KEY_FILENAME=$TMPDIR/key.pem.b64
#
#for ((COUNTER = 1 ; COUNTER <= $WAIT_FOR_CERT_KEY_FILE_SECONDS ; COUNTER += 1)) ; do
#    if [ -f $CERT_KEY_FILENAME ] ; then
#        sleep 1
#        base64 --wrap=0 -d < $CERT_KEY_FILENAME > $HOME/etc/apache2/key.pem
#        break
#    else
#        sleep 1
#    fi
#done
#
#if [ -f $CERT_KEY_FILENAME ] ; then
#    rm $CERT_KEY_FILENAME
#else
#    echo "Error, no cert key available"
#    exit 1
#fi

exec /usr/sbin/apache2 -d "$APACHE_CONFDIR" "$APACHE_ARGUMENTS"
